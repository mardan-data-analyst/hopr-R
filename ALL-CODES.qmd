---
title: "Hands-On Programming with R"
author: "Mardan Mirzaguliyev"
format: html
editor: visual
---

# R-user-interface.R

```{r}
print(1 + 1)
```

```{r}
print(100:130)
```

```{r}
print(5 - 1)
```

```{r}
# 3 % 5
# Error: unexpected input in "3 % 5"
```

```{r}
# Basic arithmetic
print(2 * 3)

print(4 - 1)   

print(6 / (4 - 1))

```

```{r}
# Exercise
# 1
print(15 + 2)

# 2
print(17 * 3)

# 3
print(51 - 6)

# 4
print(45 / 3)
```

# Objects

```{r}
1:6
```

```{r}
a <- 1

a + 1
```

```{r}
die <- 1:6
die
```

```{r}
ls()
```

```{r}
die - 1

die / 2

die *  die
```

```{r}
1:2

1:4

die

die + 1:2
die + 1:4
# Warning message:
# In die + 1:4 : longer object length is not a multiple of shorter object length
```

```{r}
c(1, 2)

die  * c(1, 2)

# inner multiplication
die %*% die

# outer multiplication
die %o% die

die
```

# Functions

```{r}

```

# Sample with replacement

```{r}

```

# Writing your own functions

```{r}
die <- 1:6
dice <- sample(die, size = 2, replace = TRUE)
sum(dice)
```

# Function constructor

```{r}
# my_function <- function() {}

die <- 1:6
dice <- sample(die, size = 2, replace = TRUE)
sum(dice)

roll <- function() {
  die <- 1:6
  dice  <- sample(die, size = 2, replace = TRUE)
  sum(dice)
}

# to call the function write its name followed by parentheses
roll()

# without parentheses 
# R will print information about the function
roll

# function() {
#  die <- 1:6
#  dice  <- sample(die, size = 2, replace = TRUE)
#  sum(dice)
# }
# <bytecode: 0x55b1c7281a58>

# Here’s some code that would display a result:
dice
1+1
sqrt(2)

# Here’s some code that would not:
dice <- sample(die, size =  2, replace = TRUE)
two <- 1 + 1
a  <- sqrt(2)
```

# Arguments

```{r}
roll <- function() {
  die <- 1:6
  dice  <- sample(die, size = 2, replace = TRUE)
  sum(dice)
}

roll()


roll2 <- function() {
  dice <- sample(bones, size = 2, replace  = TRUE)
  sum(dice)
}

# roll2()
# Error in roll2() : object 'bones' not found


roll3 <- function(bones) {
  dice <- sample(bones, size = 2, replace = TRUE)
  sum(dice)
}

roll3(bones = 1:4)
roll3(bones = 1:6)
roll3(1:20)

roll2 <- function(bones = 1:6) {
  dice <- sample(bones, size = 2, replace = TRUE)
  sum(dice)
}

roll4 <- function(bones = 1:6) {
  dice <- sample(bones, size = 2, replace = TRUE)
  sum(dice)
}

roll4()
```

# Packages

```{r}
# install.packages("tidyverse")
# remove.packages("ggplot2")
library(tidyverse)

# SCATTER PLOT

# qplot - without brackets prints details about the function

x1 <- c(-1, -0.8, -0.6, -0.4, -0.2, 0, 0.2,0.4, 0.6,  0.8, 1)
x1

y1 <- x1^3
y1

qplot(x1, y1)
# `qplot()` was deprecated in ggplot2 3.4.0.

# Using ggplot function instead

## Create a data frame from the vectors
data1 <- data.frame(x1, y1)

ggplot(data1, aes(x = x1, y = y1)) +
  geom_point() +
  labs(title = "Scatter Plot", x = "X-axis", y = "Y-axis")


# HISTOGRAM

x2 <- c(1, 2, 2, 2, 3, 3)
qplot(x2, binwidth = 1)

# Using ggplot function instead
data2 <- data.frame(x2)

ggplot(data2, aes(x = x2)) +
  geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
  labs(title = "Histogram", x = "X-axis", y = "Frequency")


x3 <- c(1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4)
qplot(x3, binwidth = 1)

# Using ggplot function instead
data3 <- data.frame(x3)
ggplot(data3, aes(x = x3)) +
  geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
  labs(title = "Histogram", x = "X-axis", y = "Frequency")

# Exercise - (Visualize a Histogram)
x4 <- c(0, 1, 1, 2, 2, 2, 3, 3, 4)
qplot(x4, binwidth = 1)


data4 <- data.frame(x4)
ggplot(data4, aes(x = x4)) +
  geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
  labs(title = "Histogram", x = "X-axis", y = "Frequency")


# replicate function
replicate(3, 1 + 1)

roll <- function() {
  die <- 1:6
  dice  <- sample(die, size = 2, replace = TRUE)
  sum(dice)
}

replicate(10, roll())

rolls <- replicate(10000, roll())

qplot(rolls, binwidth = 1)


data5 <- data.frame(rolls)
ggplot(data5, aes(x = rolls)) +
  geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
  labs(title = "Histogram", x = "X-axis", y = "Frequency")
```
